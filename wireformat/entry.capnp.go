// Code generated by capnpc-go. DO NOT EDIT.

package wireformat

import (
	strconv "strconv"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Entry struct{ capnp.Struct }
type Entry_customContent Entry
type Entry_Which uint16

const (
	Entry_Which_customContent Entry_Which = 0
	Entry_Which_agentContent  Entry_Which = 1
	Entry_Which_linksContent  Entry_Which = 2
	Entry_Which_delContent    Entry_Which = 3
)

func (w Entry_Which) String() string {
	const s = "customContentagentContentlinksContentdelContent"
	switch w {
	case Entry_Which_customContent:
		return s[0:13]
	case Entry_Which_agentContent:
		return s[13:25]
	case Entry_Which_linksContent:
		return s[25:37]
	case Entry_Which_delContent:
		return s[37:47]

	}
	return "Entry_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

type Entry_customContent_Which uint16

const (
	Entry_customContent_Which_json Entry_customContent_Which = 0
	Entry_customContent_Which_bson Entry_customContent_Which = 1
)

func (w Entry_customContent_Which) String() string {
	const s = "jsonbson"
	switch w {
	case Entry_customContent_Which_json:
		return s[0:4]
	case Entry_customContent_Which_bson:
		return s[4:8]

	}
	return "Entry_customContent_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Entry_TypeID is the unique identifier for the type Entry.
const Entry_TypeID = 0xe4aee52786b83658

func NewEntry(s *capnp.Segment) (Entry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Entry{st}, err
}

func NewRootEntry(s *capnp.Segment) (Entry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Entry{st}, err
}

func ReadRootEntry(msg *capnp.Message) (Entry, error) {
	root, err := msg.RootPtr()
	return Entry{root.Struct()}, err
}

func (s Entry) String() string {
	str, _ := text.Marshal(0xe4aee52786b83658, s.Struct)
	return str
}

func (s Entry) Which() Entry_Which {
	return Entry_Which(s.Struct.Uint16(2))
}
func (s Entry) CustomContent() Entry_customContent { return Entry_customContent(s) }

func (s Entry) SetCustomContent() {
	s.Struct.SetUint16(2, 0)
}

func (s Entry_customContent) Which() Entry_customContent_Which {
	return Entry_customContent_Which(s.Struct.Uint16(0))
}
func (s Entry_customContent) Json() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Entry_customContent) HasJson() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Entry_customContent) JsonBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Entry_customContent) SetJson(v string) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetText(0, v)
}

func (s Entry_customContent) Bson() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Entry_customContent) HasBson() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Entry_customContent) SetBson(v []byte) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetData(0, v)
}

func (s Entry) AgentContent() (Entry_AgentEntry, error) {
	p, err := s.Struct.Ptr(0)
	return Entry_AgentEntry{Struct: p.Struct()}, err
}

func (s Entry) HasAgentContent() bool {
	if s.Struct.Uint16(2) != 1 {
		return false
	}
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Entry) SetAgentContent(v Entry_AgentEntry) error {
	s.Struct.SetUint16(2, 1)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAgentContent sets the agentContent field to a newly
// allocated Entry_AgentEntry struct, preferring placement in s's segment.
func (s Entry) NewAgentContent() (Entry_AgentEntry, error) {
	s.Struct.SetUint16(2, 1)
	ss, err := NewEntry_AgentEntry(s.Struct.Segment())
	if err != nil {
		return Entry_AgentEntry{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Entry) LinksContent() (Entry_LinksEntry, error) {
	p, err := s.Struct.Ptr(0)
	return Entry_LinksEntry{Struct: p.Struct()}, err
}

func (s Entry) HasLinksContent() bool {
	if s.Struct.Uint16(2) != 2 {
		return false
	}
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Entry) SetLinksContent(v Entry_LinksEntry) error {
	s.Struct.SetUint16(2, 2)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewLinksContent sets the linksContent field to a newly
// allocated Entry_LinksEntry struct, preferring placement in s's segment.
func (s Entry) NewLinksContent() (Entry_LinksEntry, error) {
	s.Struct.SetUint16(2, 2)
	ss, err := NewEntry_LinksEntry(s.Struct.Segment())
	if err != nil {
		return Entry_LinksEntry{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Entry) DelContent() (Entry_DelEntry, error) {
	p, err := s.Struct.Ptr(0)
	return Entry_DelEntry{Struct: p.Struct()}, err
}

func (s Entry) HasDelContent() bool {
	if s.Struct.Uint16(2) != 3 {
		return false
	}
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Entry) SetDelContent(v Entry_DelEntry) error {
	s.Struct.SetUint16(2, 3)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDelContent sets the delContent field to a newly
// allocated Entry_DelEntry struct, preferring placement in s's segment.
func (s Entry) NewDelContent() (Entry_DelEntry, error) {
	s.Struct.SetUint16(2, 3)
	ss, err := NewEntry_DelEntry(s.Struct.Segment())
	if err != nil {
		return Entry_DelEntry{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Entry_List is a list of Entry.
type Entry_List struct{ capnp.List }

// NewEntry creates a new list of Entry.
func NewEntry_List(s *capnp.Segment, sz int32) (Entry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Entry_List{l}, err
}

func (s Entry_List) At(i int) Entry { return Entry{s.List.Struct(i)} }

func (s Entry_List) Set(i int, v Entry) error { return s.List.SetStruct(i, v.Struct) }

// Entry_Promise is a wrapper for a Entry promised by a client call.
type Entry_Promise struct{ *capnp.Pipeline }

func (p Entry_Promise) Struct() (Entry, error) {
	s, err := p.Pipeline.Struct()
	return Entry{s}, err
}

func (p Entry_Promise) CustomContent() Entry_customContent_Promise {
	return Entry_customContent_Promise{p.Pipeline}
}

// Entry_customContent_Promise is a wrapper for a Entry_customContent promised by a client call.
type Entry_customContent_Promise struct{ *capnp.Pipeline }

func (p Entry_customContent_Promise) Struct() (Entry_customContent, error) {
	s, err := p.Pipeline.Struct()
	return Entry_customContent{s}, err
}

func (p Entry_Promise) AgentContent() Entry_AgentEntry_Promise {
	return Entry_AgentEntry_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p Entry_Promise) LinksContent() Entry_LinksEntry_Promise {
	return Entry_LinksEntry_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p Entry_Promise) DelContent() Entry_DelEntry_Promise {
	return Entry_DelEntry_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Entry_AgentEntry struct{ capnp.Struct }

// Entry_AgentEntry_TypeID is the unique identifier for the type Entry_AgentEntry.
const Entry_AgentEntry_TypeID = 0x97d0b12a82fb29e7

func NewEntry_AgentEntry(s *capnp.Segment) (Entry_AgentEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Entry_AgentEntry{st}, err
}

func NewRootEntry_AgentEntry(s *capnp.Segment) (Entry_AgentEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Entry_AgentEntry{st}, err
}

func ReadRootEntry_AgentEntry(msg *capnp.Message) (Entry_AgentEntry, error) {
	root, err := msg.RootPtr()
	return Entry_AgentEntry{root.Struct()}, err
}

func (s Entry_AgentEntry) String() string {
	str, _ := text.Marshal(0x97d0b12a82fb29e7, s.Struct)
	return str
}

func (s Entry_AgentEntry) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Entry_AgentEntry) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Entry_AgentEntry) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Entry_AgentEntry) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Entry_AgentEntry) KeyType() int8 {
	return int8(s.Struct.Uint8(0))
}

func (s Entry_AgentEntry) SetKeyType(v int8) {
	s.Struct.SetUint8(0, uint8(v))
}

func (s Entry_AgentEntry) PublicKey() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Entry_AgentEntry) HasPublicKey() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Entry_AgentEntry) PublicKeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Entry_AgentEntry) SetPublicKey(v string) error {
	return s.Struct.SetText(1, v)
}

// Entry_AgentEntry_List is a list of Entry_AgentEntry.
type Entry_AgentEntry_List struct{ capnp.List }

// NewEntry_AgentEntry creates a new list of Entry_AgentEntry.
func NewEntry_AgentEntry_List(s *capnp.Segment, sz int32) (Entry_AgentEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Entry_AgentEntry_List{l}, err
}

func (s Entry_AgentEntry_List) At(i int) Entry_AgentEntry { return Entry_AgentEntry{s.List.Struct(i)} }

func (s Entry_AgentEntry_List) Set(i int, v Entry_AgentEntry) error {
	return s.List.SetStruct(i, v.Struct)
}

// Entry_AgentEntry_Promise is a wrapper for a Entry_AgentEntry promised by a client call.
type Entry_AgentEntry_Promise struct{ *capnp.Pipeline }

func (p Entry_AgentEntry_Promise) Struct() (Entry_AgentEntry, error) {
	s, err := p.Pipeline.Struct()
	return Entry_AgentEntry{s}, err
}

type Entry_LinksEntry struct{ capnp.Struct }

// Entry_LinksEntry_TypeID is the unique identifier for the type Entry_LinksEntry.
const Entry_LinksEntry_TypeID = 0xace021eafe11b143

func NewEntry_LinksEntry(s *capnp.Segment) (Entry_LinksEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Entry_LinksEntry{st}, err
}

func NewRootEntry_LinksEntry(s *capnp.Segment) (Entry_LinksEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Entry_LinksEntry{st}, err
}

func ReadRootEntry_LinksEntry(msg *capnp.Message) (Entry_LinksEntry, error) {
	root, err := msg.RootPtr()
	return Entry_LinksEntry{root.Struct()}, err
}

func (s Entry_LinksEntry) String() string {
	str, _ := text.Marshal(0xace021eafe11b143, s.Struct)
	return str
}

func (s Entry_LinksEntry) Links() (Entry_Link_List, error) {
	p, err := s.Struct.Ptr(0)
	return Entry_Link_List{List: p.List()}, err
}

func (s Entry_LinksEntry) HasLinks() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Entry_LinksEntry) SetLinks(v Entry_Link_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewLinks sets the links field to a newly
// allocated Entry_Link_List, preferring placement in s's segment.
func (s Entry_LinksEntry) NewLinks(n int32) (Entry_Link_List, error) {
	l, err := NewEntry_Link_List(s.Struct.Segment(), n)
	if err != nil {
		return Entry_Link_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Entry_LinksEntry_List is a list of Entry_LinksEntry.
type Entry_LinksEntry_List struct{ capnp.List }

// NewEntry_LinksEntry creates a new list of Entry_LinksEntry.
func NewEntry_LinksEntry_List(s *capnp.Segment, sz int32) (Entry_LinksEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Entry_LinksEntry_List{l}, err
}

func (s Entry_LinksEntry_List) At(i int) Entry_LinksEntry { return Entry_LinksEntry{s.List.Struct(i)} }

func (s Entry_LinksEntry_List) Set(i int, v Entry_LinksEntry) error {
	return s.List.SetStruct(i, v.Struct)
}

// Entry_LinksEntry_Promise is a wrapper for a Entry_LinksEntry promised by a client call.
type Entry_LinksEntry_Promise struct{ *capnp.Pipeline }

func (p Entry_LinksEntry_Promise) Struct() (Entry_LinksEntry, error) {
	s, err := p.Pipeline.Struct()
	return Entry_LinksEntry{s}, err
}

type Entry_Link struct{ capnp.Struct }

// Entry_Link_TypeID is the unique identifier for the type Entry_Link.
const Entry_Link_TypeID = 0xd8c1e83ad6f0ece0

func NewEntry_Link(s *capnp.Segment) (Entry_Link, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Entry_Link{st}, err
}

func NewRootEntry_Link(s *capnp.Segment) (Entry_Link, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Entry_Link{st}, err
}

func ReadRootEntry_Link(msg *capnp.Message) (Entry_Link, error) {
	root, err := msg.RootPtr()
	return Entry_Link{root.Struct()}, err
}

func (s Entry_Link) String() string {
	str, _ := text.Marshal(0xd8c1e83ad6f0ece0, s.Struct)
	return str
}

func (s Entry_Link) LinkAction() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Entry_Link) HasLinkAction() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Entry_Link) LinkActionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Entry_Link) SetLinkAction(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Entry_Link) Base() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Entry_Link) HasBase() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Entry_Link) BaseBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Entry_Link) SetBase(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Entry_Link) Link() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Entry_Link) HasLink() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Entry_Link) LinkBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Entry_Link) SetLink(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Entry_Link) Tag() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Entry_Link) HasTag() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Entry_Link) TagBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Entry_Link) SetTag(v string) error {
	return s.Struct.SetText(3, v)
}

// Entry_Link_List is a list of Entry_Link.
type Entry_Link_List struct{ capnp.List }

// NewEntry_Link creates a new list of Entry_Link.
func NewEntry_Link_List(s *capnp.Segment, sz int32) (Entry_Link_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Entry_Link_List{l}, err
}

func (s Entry_Link_List) At(i int) Entry_Link { return Entry_Link{s.List.Struct(i)} }

func (s Entry_Link_List) Set(i int, v Entry_Link) error { return s.List.SetStruct(i, v.Struct) }

// Entry_Link_Promise is a wrapper for a Entry_Link promised by a client call.
type Entry_Link_Promise struct{ *capnp.Pipeline }

func (p Entry_Link_Promise) Struct() (Entry_Link, error) {
	s, err := p.Pipeline.Struct()
	return Entry_Link{s}, err
}

type Entry_DelEntry struct{ capnp.Struct }

// Entry_DelEntry_TypeID is the unique identifier for the type Entry_DelEntry.
const Entry_DelEntry_TypeID = 0xb74ce4f7d18b7d0c

func NewEntry_DelEntry(s *capnp.Segment) (Entry_DelEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Entry_DelEntry{st}, err
}

func NewRootEntry_DelEntry(s *capnp.Segment) (Entry_DelEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Entry_DelEntry{st}, err
}

func ReadRootEntry_DelEntry(msg *capnp.Message) (Entry_DelEntry, error) {
	root, err := msg.RootPtr()
	return Entry_DelEntry{root.Struct()}, err
}

func (s Entry_DelEntry) String() string {
	str, _ := text.Marshal(0xb74ce4f7d18b7d0c, s.Struct)
	return str
}

func (s Entry_DelEntry) Hash() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Entry_DelEntry) HasHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Entry_DelEntry) HashBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Entry_DelEntry) SetHash(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Entry_DelEntry) Message() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Entry_DelEntry) HasMessage() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Entry_DelEntry) MessageBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Entry_DelEntry) SetMessage(v string) error {
	return s.Struct.SetText(1, v)
}

// Entry_DelEntry_List is a list of Entry_DelEntry.
type Entry_DelEntry_List struct{ capnp.List }

// NewEntry_DelEntry creates a new list of Entry_DelEntry.
func NewEntry_DelEntry_List(s *capnp.Segment, sz int32) (Entry_DelEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Entry_DelEntry_List{l}, err
}

func (s Entry_DelEntry_List) At(i int) Entry_DelEntry { return Entry_DelEntry{s.List.Struct(i)} }

func (s Entry_DelEntry_List) Set(i int, v Entry_DelEntry) error { return s.List.SetStruct(i, v.Struct) }

// Entry_DelEntry_Promise is a wrapper for a Entry_DelEntry promised by a client call.
type Entry_DelEntry_Promise struct{ *capnp.Pipeline }

func (p Entry_DelEntry_Promise) Struct() (Entry_DelEntry, error) {
	s, err := p.Pipeline.Struct()
	return Entry_DelEntry{s}, err
}

const schema_959f5b6b81f1e7f7 = "x\xda\x84S\xcdk\x1bG\x1c\xfd\xbd\x99]\xc9\x14\xa9" +
	"\xd2vU\x8a\x0e\xc6\xb4\xb8\xb4\x16\xb4u\xed\xb6\x07_" +
	"j[\x16\xa6\xad\x0a\x9eb\x83Q[\xf0Z\x9eZ\xb2" +
	"\xa4\x95\xac]\xe3\xea`\x8a{\xe8\xa5\xf4\xd0C\xe9\xd1" +
	"\xe7BI\xf0)\xb9\xe6?HrH\x02!\xe0\x83\x83" +
	"\x13\x93@r\xf2\xc1\x89'\xcc\xcaZ-r>n\xf3" +
	"\x9by\xcc\xfb\x987\xe3\xb3l\x9a}n\xee\x0d\x11\x89" +
	"53\xa6\x8e\xc6N\x7f\xcf\xed_\xff\x97\xc40\xa0\x96" +
	"\xbf\xba\xfa\xc7G\xf7/\x1d\x92\xc9\xe2D\x93_\x1a\xb3" +
	"\xb0\x0bF\x9c\xc8\x9e1.\x13T~\xdf:;~\xff" +
	"\xe0\x7f\xb2\x86\xa3`h\xf0=\x0d~\x1c\x80\x1f\x1a_" +
	"\x13Tb\xe7\xcf\x1b'\x87\xc5+\x03\xe0\xe0\xe6\xac9" +
	"\x01{\xcc\xd4\xe0\x0f\xcdm\x82:x\xf4\xe4\xd6\xd4\x83" +
	"kw\x06\xc0\xfa\xba\xc9]\xf3\x1d\xd8\x7f\x07\xe0\xbf\xcc" +
	"#\x8a\x9c\x8b\xf7\x00ur\xf4t\xb7\xf6\xe3\xde?T" +
	"@\xdc\x00l\x19;\xb67c\xf3D\xf6\x7f1\x8d~" +
	"\xebt\xfe\xf6q\xe2\xee\xd9\x80\xc5%\xc4\xc1\x88&7" +
	"\xe3%\x10\xec\x9d\xf86\xddT\xdb\xd5\xb6\xfc\xa5\xd9n" +
	"\x18\x8e\xff\x99t\xfdv\xe7\xd3\xb2\xd3r[S\x85`" +
	"=\xb3.]?X\xd2\x02 \x12\xdc 2@d\x15" +
	"rDb\x9aC\x14\x19\x80\x0c\xf4\xde7\xb3Db\x8e" +
	"C,0X\x0c\x19Mf}\xff\x03\x91(r\x88e" +
	"\x86\x94\xeb4$\x12\xc4\x90 \xfcV\x93\x9d\xc5NK" +
	"\x82\x11\x03#\xa8\xd6\xd6j\xbdZ\xfeN\x12:=\xcc" +
	"\x1b\xd4\x15\xabn\xcd\xeb\xab3Bu\xc9\x09\"1\xc4" +
	"!F\x19F\xea\x1a\x85\xb7\x09\x0b\x1cH\xf7s'\xe8" +
	"\xcd\x90\x82\xbf\x94bN\xd6G\x82\x95&\x18\x0a\x09\xc6" +
	"\xb4\xfdQ\x0e1\xce`\xf5\xfc\x7f\xa2\xfd\x7f\xcc!\xbe" +
	"`HU\x1c\xaf\x12ZmH\xcfs\xd6\xe5\x05[\xfc" +
	"U\xb6P\xd3|\xe9\x90\xcf)\x11\x89\x15\x0eQ\x8f\xf0" +
	"U\xb5\x885\x0e\xd1\xd2y\xb3n\xde\x0d\xbdY\xe1\x10" +
	">\x83\xc5y\x06\x9c\xc8\xda\xfc\x80H\xd49\xc4\xaf\x0c" +
	"J\xe71S\xf6\xab\xc4\x9bnOQj\xd5\xf1By" +
	")\x8d\xe8\x0dq\xdfY\xbf\xa0\x9b\x0d\xeaN\xe9A\xa4" +
	"\x81\xfe\xf7\xb2\xb2\xa5\xc8\xef\xc9\x96\"\x85\xcf\xe6\"_" +
	"\xe5\xddoU\xafe\xc4\xdb\x1d\xd5{T=\xa4\xf4\xa0" +
	"\xe6d\xbd\xfb\xc8D:\x92\x84R\x88t\xdcr\xda\xc4" +
	"\x928S\xe7}\xdb\xe8\xf7-\xc9\x9e\xabn\x00Kz" +
	"w\x91C\xac0$\xf93\x95\x81Ad\xfd\xacS\xfd" +
	"\x89CT\x18Ty\xcb\xf3\x9b\x8d|\x93F\\_\xba" +
	"\xber\xb4\xa8|\xd3\xa5\x94\x1e\x91\xee;# M\xdd" +
	"\x1c\xbd( t{\x0eX\x93\xf5|\xd3\xf5%\xf1\xe0" +
	"8\xb4|~\xfc\xfan\xf7\xe4\xb8\xbe\xe4\xae\xaf\xab\x97" +
	"P\xeaB\xf7\xba\xbe\x83\xf2\xe5\"\xe5\xdb\xf0\xa2O\xab" +
	"\x87$1$\x09/\x02\x00\x00\xff\xff\x8e\xf4f\x97"

func init() {
	schemas.Register(schema_959f5b6b81f1e7f7,
		0x97d0b12a82fb29e7,
		0xace021eafe11b143,
		0xb74ce4f7d18b7d0c,
		0xd8c1e83ad6f0ece0,
		0xe4aee52786b83658,
		0xfedb0cead747fb0a)
}
